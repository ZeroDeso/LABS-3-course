//первый вариант
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class CalculatorGUI extends JFrame {
    private JTextField display;

    private double currentInput;
    private String lastOperation;

    public CalculatorGUI() {
        setTitle("Калькулятор");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        display = new JTextField();
        display.setEditable(false);
        display.setHorizontalAlignment(JTextField.RIGHT);
        add(display, BorderLayout.NORTH);

        JPanel buttonPanel = new JPanel();
        buttonPanel.setLayout(new GridLayout(4, 4));

        String[] buttonLabels = {
                "7", "8", "9", "/",
                "4", "5", "6", "*",
                "1", "2", "3", "-",
                "0", ".", "=", "+"
        };

        for (String label : buttonLabels) {
            JButton button = new JButton(label);
            button.addActionListener(new ButtonClickListener());
            buttonPanel.add(button);
        }

        add(buttonPanel, BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null); // Помещаем окно по центру экрана
    }

    private class ButtonClickListener implements ActionListener {
        public void actionPerformed(ActionEvent event) {
            JButton source = (JButton) event.getSource();
            String buttonText = source.getText();

            if (buttonText.matches("[0-9]")) {
                // Если нажата цифра
                display.setText(display.getText() + buttonText);
            } else if (buttonText.matches("[+\\-*/]")) {
                // Если нажата арифметическая операция
                performOperation();
                lastOperation = buttonText;
                currentInput = Double.parseDouble(display.getText());
                display.setText("");
            } else if (buttonText.equals("=")) {
                // Если нажата кнопка "="
                performOperation();
                lastOperation = null;
            } else if (buttonText.equals(".")) {
                // Если нажата кнопка "."
                if (!display.getText().contains(".")) {
                    display.setText(display.getText() + buttonText);
                }
            }
        }

        private void performOperation() {
            if (lastOperation != null) {
                double newInput = Double.parseDouble(display.getText());
                switch (lastOperation) {
                    case "+":
                        currentInput += newInput;
                        break;
                    case "-":
                        currentInput -= newInput;
                        break;
                    case "*":
                        currentInput *= newInput;
                        break;
                    case "/":
                        if (newInput != 0) {
                            currentInput /= newInput;
                        } else {
                            display.setText("Error");
                            currentInput = 0;
                            lastOperation = null;
                            return;
                        }
                        break;
                }
                display.setText(String.valueOf(currentInput));
            }
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            new CalculatorGUI().setVisible(true);
        });
    }
}




//второй вариант - отличие дополнительные функции, такие как кнопка смены знака, кнопка удаления последней цифры, и др.
//Кроме того, мы используем GridBagLayout для более гибкого размещения компонентов.

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class AdvancedCalculator extends JFrame {
    private JTextField display;
    private double currentInput;
    private String lastOperation;

    public AdvancedCalculator() {
        setTitle("Калькулятор");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        // Дисплей
        display = new JTextField();
        display.setEditable(false);
        display.setHorizontalAlignment(JTextField.RIGHT);
        display.setFont(new Font("Arial", Font.PLAIN, 24));
        add(display, BorderLayout.NORTH);

        // Панель кнопок
        JPanel buttonPanel = new JPanel(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(5, 5, 5, 5);

        String[] buttonLabels = {
                "7", "8", "9", "/",
                "4", "5", "6", "*",
                "1", "2", "3", "-",
                "0", ".", "=", "+",
                "±", "C", "←"
        };

        for (int i = 0; i < buttonLabels.length; i++) {
            JButton button = new JButton(buttonLabels[i]);
            button.addActionListener(new ButtonClickListener());
            button.setFont(new Font("Arial", Font.PLAIN, 18));

            gbc.gridx = i % 4;
            gbc.gridy = i / 4;
            gbc.fill = GridBagConstraints.BOTH;
            buttonPanel.add(button, gbc);
        }

        add(buttonPanel, BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null); // Помещаем окно по центру экрана
    }

    private class ButtonClickListener implements ActionListener {
        public void actionPerformed(ActionEvent event) {
            JButton source = (JButton) event.getSource();
            String buttonText = source.getText();

            switch (buttonText) {
                case "±":
                    // Смена знака
                    if (!display.getText().isEmpty() && !display.getText().equals("0")) {
                        if (display.getText().charAt(0) == '-') {
                            display.setText(display.getText().substring(1));
                        } else {
                            display.setText("-" + display.getText());
                        }
                    }
                    break;
                case "C":
                    // Очистка
                    display.setText("");
                    currentInput = 0;
                    lastOperation = null;
                    break;
                case "←":
                    // Удаление последней цифры
                    String currentText = display.getText();
                    if (!currentText.isEmpty()) {
                        display.setText(currentText.substring(0, currentText.length() - 1));
                    }
                    break;
                case "=":
                    // Выполнение операции
                    performOperation();
                    lastOperation = null;
                    break;
                default:
                    // Обработка цифр и арифметических операций
                    processButton(buttonText);
                    break;
            }
        }

        private void processButton(String buttonText) {
            if (buttonText.matches("[0-9.]")) {
                // Если нажата цифра или точка
                display.setText(display.getText() + buttonText);
            } else if (buttonText.matches("[+\\-*/]")) {
                // Если нажата арифметическая операция
                performOperation();
                lastOperation = buttonText;
                currentInput = Double.parseDouble(display.getText());
                display.setText("");
            }
        }

        private void performOperation() {
            if (lastOperation != null) {
                double newInput = Double.parseDouble(display.getText());
                switch (lastOperation) {
                    case "+":
                        currentInput += newInput;
                        break;
                    case "-":
                        currentInput -= newInput;
                        break;
                    case "*":
                        currentInput *= newInput;
                        break;
                    case "/":
                        if (newInput != 0) {
                            currentInput /= newInput;
                        } else {
                            display.setText("Error");
                            currentInput = 0;
                            lastOperation = null;
                            return;
                        }
                        break;
                }
                display.setText(formatResult(currentInput));
            }
        }

        private String formatResult(double result) {
            if (result == (long) result) {
                return String.format("%d", (long) result);
            } else {
                return String.format("%s", result);
            }
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            new AdvancedCalculator().setVisible(true);
        });
    }
}
